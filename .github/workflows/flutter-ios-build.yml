name: iOS Build

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Install Rosetta
        run: softwareupdate --install-rosetta --agree-to-license

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod init
          pod install
          cd ..

      - name: Build iOS application
        run: echo "hello!" # flutter build ios --simulator --no-codesign
        #run: flutter build ios --release --no-codesign
        #run: flutter build ios --debug --no-codesign
        #run: flutter build ipa --release --no-codesign
        #run: flutter build ipa --release --no-codesign --obfuscate --split-debug-info=ios/symbols --build-name=0.2.0 --build-number=2

      #- name: Build iOS ipa
      #run: xcodebuild -exportArchive -archivePath build/ios/archive/Runner.xcarchive -exportOptionsPlist ios/exportOptions.plist -exportPath build/ios/ipa/Runner.ipa

      # xcodebuild -exportArchive -archivePath $PWD/build/Runner.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build/Runner.ipa

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: iOS-Build
      #     path: build/ios/iphonesimulator # flutter build ios --simulator --no-codesign
      #     #path: build/ios/iphoneos # for command: flutter build ios --release --no-codesign
      #     #path: build/ios/iphoneos # for command: flutter build ios --debug --no-codesign
      #     #path: build/ios/archive # for command: flutter build ipa --no-codesign
      #     #path: build/ios/ipa


      - name: Create iOS Simulator
        run: |
          UDID=$(xcrun simctl create "iPhone 14" com.apple.CoreSimulator.SimDeviceType.iPhone-14 com.apple.CoreSimulator.SimRuntime.iOS-17-0)
          echo "SIMULATOR_UDID=$UDID" >> $GITHUB_ENV

      - name: Boot iOS simulator
        run: xcrun simctl boot ${{ env.SIMULATOR_UDID }}

      - name: Wait for Simulator to boot
        run: |
          until xcrun simctl list devices | grep -q "Booted"; do
            echo "Waiting for simulator to boot..."
            sleep 5
          done

      # More: https://chatgpt.com/share/67603bca-97a0-800f-bf71-14f90fd55afb
      - name: Run Flutter Integration Test with Video Recording
        run: |
          # xcrun simctl list devices available
          # Start screen recording
          mkdir -p artifacts
          xcrun simctl io booted recordVideo artifacts/integration-test-video.mp4 & RECORD_PID=$!
          # Run the integration tests
          # flutter test integration_test/app_test.dart -d ${{ env.SIMULATOR_UDID }}
          sleep 30
          # Stop screen recording
          kill $RECORD_PID || true

      - name: Shut Down iOS simulator
        if: always()
        run: xcrun simctl shutdown ${{ env.SIMULATOR_UDID }}

      - name: Upload Test Video
        uses: actions/upload-artifact@v4
        with:
          name: flutter-integration-test-video
          path: artifacts/integration-test-video.mp4
